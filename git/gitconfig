# awesome git config
[push]
	default = simple
[color]
	ui = true
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red
	new = cyan
[apply]
	whitespace = nowarn
[format]
	pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
[alias]
  # add
  a = add
  ap = add --patch

  # snapshotters
  # via http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
  snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
  snapshots = !git stash list --grep snapshot

  # branch
  br = branch
  cbr = checkout -b       # create and switch to new branch
  # recent branches : http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
  rbr = !git for-each-ref --count=5 --sort=-committerdate refs/heads/ --format='%(refname:short)'

  # checkout
  co = checkout

  # commit
  cm = commit -m          # commit with message
  cam = commit -am        # commit all with message
  c = commit
  amend = commit --amend  # ammend your last commit

  # diffs
  d = diff                # diff unstaged changes
  dc = diff --cached      # diff staged changes
  last = diff HEAD^       # diff last commited change

  # log
  l = log --graph --date=short
  hist = log --color --graph --pretty=format:'%Cblue%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
  changes = log --pretty=format:'%h %cr %cn %Cgreen%s%Creset' --name-status
  short = log --pretty=format:'%h %cr %cn %Cgreen%s%Creset'
  changelog = log --pretty=format:' * %s'
  shortnocolor = log --pretty=format:'%h %cr %cn %s'

  # remote
  r = remote -v           # show remote (verbose)

  # reset
  unstage = reset HEAD    # remove files from index (tracking)
  uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommited state
  filelog = log -u        # show changes to a file

  # status
  st = status

  # stash
  ss = stash
  sl = stash list
  sa = stash apply
  sd = stash drop

  fe = fetch
  rb = rebase
  rbc = rebase --continue
  rbs = rebase --skip
  me = merge

[include]
  path = .gitconfig.user
